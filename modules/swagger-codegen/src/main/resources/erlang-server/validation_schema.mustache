-module({{packageName}}_validation_schema).

-export([request_params/1]).
-export([request_param_info/2]).
-export([response_data_info/2]).

-type param_name()   :: atom().
-type param_source() ::
    qs_val  |
    binding |
    header  |
    body.
-type param_base_rule() ::
    {type, 'binary'} |
    {type, 'byte'} |
    {type, 'int32'} |
    {type, 'int64'} |
    {type, 'float'} |
    {type, 'boolean'} |
    {type, 'date'} |
    {type, 'datetime'} |
    {enum, [atom()]} |
    {max, Max :: number(), Type :: exclusive | inclusive} |
    {min, Min :: number(), Type :: exclusive | inclusive} |
    {max_length, MaxLength :: integer()} |
    {min_length, MaxLength :: integer()} |
    {pattern, Pattern :: string()} |
    {required, boolean()}.
-type collection_format() ::
    'csv' |
    'ssv' |
    'tsv' |
    'pipes'.
-type param_rule() ::
    param_base_rule() |
    {'list', collection_format(), [param_base_rule()]}.

-type rule() ::
    schema |
    param_rule().

-export_type([param_name/0]).
-export_type([param_source/0]).
-export_type([param_rule/0]).
-export_type([param_base_rule/0]).
-export_type([collection_format/0]).
-export_type([rule/0]).

-type http_code() :: pos_integer().
-type data_type() :: atom().

-type response_spec() :: {data_type(), param_name()}.

-export_type([response_spec/0]).

%%

-spec request_params({{packageName}}_api:operation_id()) ->
    [param_name()].
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}
request_params('{{operationId}}') ->
    [{{#allParams}}{{^isBodyParam}}
        '{{baseName}}'{{/isBodyParam}}{{#isBodyParam}}
        '{{dataType}}'{{/isBodyParam}}{{#hasMore}},{{/hasMore}}{{/allParams}}
    ];
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
request_params(_) ->
    error(unknown_operation).

-spec request_param_info({{packageName}}_api:operation_id(), param_name()) ->
    #{
        source => param_source(),
        rules  => [rule()]
    } |
    no_return().
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}{{#allParams}}
request_param_info('{{operationId}}', {{^isBodyParam}}'{{baseName}}'{{/isBodyParam}}{{#isBodyParam}}'{{dataType}}'{{/isBodyParam}}) ->
    #{
        source => {{#isQueryParam}}qs_val{{/isQueryParam}} {{#isPathParam}}binding{{/isPathParam}} {{#isHeaderParam}}header{{/isHeaderParam}}{{#isBodyParam}}body{{/isBodyParam}},
        rules => {{#isListContainer}}[{list, '{{collectionFormat}}', {{#items}}[{{>api.param_info}}]{{/items}}}, {{>api.param_info}}]{{/isListContainer}}{{^isListContainer}}[{{>api.param_info}}]{{/isListContainer}}
    };
{{/allParams}}{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
request_param_info(OperationID, Name) ->
    error({unknown_param, OperationID, Name}).

-spec response_data_info({{packageName}}_api:operation_id(), http_code()) ->
    response_spec() |
    undefined       |
    no_return().
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}{{#responses}}
response_data_info('{{operationId}}', {{code}}) ->
    {{#dataType}}{'{{dataType}}', '{{baseType}}'};{{/dataType}}{{^dataType}}undefined;{{/dataType}}
{{/responses}}{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
response_data_info(OperationID, Code) ->
    error({unknown_operation, OperationID, Code}).
